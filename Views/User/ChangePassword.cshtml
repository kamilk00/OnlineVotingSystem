@model OnlineVotingSystem.Models.ChangePasswordView

<div class="container">

    <h2 class="mb-4">Change Password</h2>
    <a href="@Url.Action("Index", "User")" class="btn btn-secondary mb-3">Back to the main page</a>

    @using (Html.BeginForm("ChangePassword", "User", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
    {

        <div class="form-group">
            @Html.LabelFor(m => m.currentPassword)
            @Html.PasswordFor(m => m.currentPassword, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(m => m.currentPassword, "", new { @class = "invalid-feedback" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.newPassword)
            @Html.PasswordFor(m => m.newPassword, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(m => m.newPassword, "", new { @class = "invalid-feedback" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.confirmNewPassword)
            @Html.PasswordFor(m => m.confirmNewPassword, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(m => m.confirmNewPassword, "", new { @class = "invalid-feedback" })
        </div>

        <button type="submit" class="btn btn-primary">Change Password</button>

        @if (!string.IsNullOrEmpty(ViewBag.Message))
        {
            <div class="alert alert-success mt-3">@ViewBag.Message</div>
        }

    }

</div>